sudo: false
dist: trusty

language: php

services:
	- docker

notifications:
	email:
		on_success: never
		on_failure: never

branches:
	only:
		- master

cache:
	apt: true
	directories:
		- $HOME/.composer/cache

matrix:
	include:
		- php: 7.3
			env: PHP_VERSION=7.3 WP_VERSION=5.2 COVERAGE=1
		- php: 7.3
			env: PHP_VERSION=7.3 PHPCS=1
		- php: 7.2
			env: PHP_VERSION=7.2 WP_VERSION=5.2
		- php: 7.2
			env: PHP_VERSION=7.2 WP_VERSION=4.9
		- php: 7.1
			env: PHP_VERSION=7.1 WP_VERSION=5.2
		- php: 7.1
			env: PHP_VERSION=7.1 WP_VERSION=4.9
		- php: 7.0
			env: PHP_VERSION=7.0 WP_VERSION=5.0
		- php: 7.0
			env: PHP_VERSION=7.0 WP_VERSION=4.9
		- php: 5.6
			env: PHP_VERSION=5.6 WP_VERSION=5.0
		- php: 5.6
			env: PHP_VERSION=5.6 WP_VERSION=4.9
	allow_failures:
		- env: PHP_VERSION=5.6 WP_VERSION=5.0
		- env: PHP_VERSION=5.6 WP_VERSION=4.9

before_install:
	- sudo rm /usr/local/bin/docker-compose
	- curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > docker-compose
	- chmod +x docker-compose
	- sudo mv docker-compose /usr/local/bin
	- |
		# Remove Xdebug for a huge performance increase:
		if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
			phpenv config-rm xdebug.ini
		else
			echo "xdebug.ini does not exist"
		fi

install:
	- |
		cd $TRAVIS_BUILD_DIR
		curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
		chmod +x wp-cli.phar
		sudo mv wp-cli.phar /usr/local/bin/wp

before_script:
	- |
		if [ ! -z "$WP_VERSION" ]; then
			# Build images.
			docker-compose build \
				--build-arg DESIRED_PHP_VERSION=${PHP_VERSION} \
				--build-arg DESIRED_WP_VERSION=${WP_VERSION} \
				testing
		fi

	# Install PHP CodeSniffer and WPCS.
	- |
		if [ "$PHPCS" == "1" ]; then
			COMPOSER_MEMORY_LIMIT=-1 travis_retry composer require \
				squizlabs/php_codesniffer \
				phpcompatibility/phpcompatibility-wp wp-coding-standards/wpcs \
				dealerdirect/phpcodesniffer-composer-installer
			COMPOSER_MEMORY_LIMIT=-1 travis_retry composer install --no-dev
		fi

script:
	# Execute unit tests with coverage if specified, otherwise without coverage
	- |
		if [ ! -z "$WP_VERSION" ]; then
			docker-compose run --rm \
				-e SUITES='acceptance;functional;wpunit' \
				-e COVERAGE=${COVERAGE:-0} \
				-e DEBUG=${DEBUG:-0} \
				testing --scale app=0
		fi


	- |
		if [ "$PHPCS" == "1" ]; then
			vendor/bin/phpcs \
				wp-graphql-buddypress.php \
				src/*.php --standard=WordPress
		fi
after_success:
	# Download and run Coveralls.io client
	- |
		if [ "$COVERAGE" == "1" ]; then
			wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.1.0/php-coveralls.phar
			chmod +x php-coveralls.phar

			sed -i 's/\/var\/www\/html\/wp-content\/plugins\/wp-graphql-buddypress\///g' tests/_output/coverage.xml
			travis_retry php php-coveralls.phar -v
		fi
	